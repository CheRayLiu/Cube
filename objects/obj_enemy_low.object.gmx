<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_low</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variable
dir= -1;
movespeed= 6;
grav= 0.4;
hsp=0;
vsp=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pause game
if(global.pause) exit;

///Movement
hsp =dir * movespeed;
vsp += grav;
//Horizontal Collision square
if (place_meeting(x+hsp,y,obj_wall_squ))
{  
    while(!place_meeting(x+sign(hsp),y,obj_wall_squ))
    {
    x+=sign(hsp);
    }
    hsp=0;
    dir*=-1
}   

//Vertical Collision square
if (place_meeting(x,y+vsp,obj_wall_squ))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall_squ))
    {y+=sign(vsp);}
    vsp=0;
    
}
//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall_frame))
{  
    while(!place_meeting(x+sign(hsp),y,obj_wall_frame))
    {
    x+=sign(hsp);
    }
    hsp=0;
    dir*=-1
}   

//Vertical Collision frame
if (place_meeting(x,y+vsp,obj_wall_frame))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall_frame))
    {y+=sign(vsp);}
    vsp=0;
    
}
//Final movement
x+=hsp;
y+=vsp;
//Enemy Collision 
if(place_meeting(x,y,obj_player))
{
    if(obj_player.y &lt;y-16)
        {
        with(obj_player) vsp= -jumpspeed;
        instance_destroy();
        }
    else
        {
        room_restart();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
